@INPROCEEDINGS{Kyriakakis2014ICMSE, 
	author={Kyriakakis, P. and Chatzigeorgiou, A.}, 
	booktitle={Software Maintenance and Evolution (ICSME), 2014 IEEE International Conference on}, 
	title={Maintenance Patterns of Large-Scale PHP Web Applications}, 
	year={2014}, 
	month={Sept}, 
	pages={381-390}, 
	keywords={Internet;programming languages;software maintenance;PHP Web applications;maintenance pattern;programming language;scripting languages;software project maintenance;Communities;Java;Libraries;Maintenance engineering;Programming;Software systems;PHP;scripting language;software evolution;software libraries;survival analysis;web applications}, 
	doi={10.1109/ICSME.2014.60}, 
	ISSN={1063-6773},}

@INPROCEEDINGS{883030, 
author={Godfrey, M.W. and Qiang Tu}, 
booktitle={Software Maintenance, 2000. Proceedings. International Conference on}, 
title={Evolution in open source software: a case study}, 
year={2000}, 
month={}, 
pages={131-142}, 
keywords={Unix;operating system kernels;software maintenance;software prototyping;Linux operating system kernel;case study;commercially developed systems;development model;evolutionary narratives;large software systems;open source software;software evolution;Software prototyping}, 
doi={10.1109/ICSM.2000.883030}, 
ISSN={1063-6773},}

@INPROCEEDINGS{637156, 
	author={Lehman, M.M. and Ramil, J.F. and Wernick, P.D. and Perry, D.E. and Turski, W.M.}, 
	booktitle={Software Metrics Symposium, 1997. Proceedings., Fourth International}, 
	title={Metrics and laws of software evolution-the nineties view}, 
	year={1997}, 
	month={Nov}, 
	pages={20-32}, 
	keywords={feedback;financial data processing;software maintenance;software metrics;transaction processing;E-type software development;FEAST/1 project;FW financial transaction system;Lehman's laws;Logica Fastwire;OS/360;feedback;multi-input, multi-output system;software evolution;software metrics;software process dynamics;software process improvement;software process modelling;software technology;Chaos;Data analysis;Dynamic programming;Educational institutions;Genetic programming;Informatics;Negative feedback;Project management;Uniform resource locators;World Wide Web}, 
	doi={10.1109/METRIC.1997.637156},}


@article{Richards:2010:ADB:1809028.1806598,
	author = {Richards, Gregor and Lebresne, Sylvain and Burg, Brian and Vitek, Jan},
	title = {An Analysis of the Dynamic Behavior of JavaScript Programs},
	journal = {SIGPLAN Not.},
	issue_date = {June 2010},
	volume = {45},
	number = {6},
	month = jun,
	year = {2010},
	issn = {0362-1340},
	pages = {1--12},
	numpages = {12},
	url = {http://doi.acm.org/10.1145/1809028.1806598},
	doi = {10.1145/1809028.1806598},
	acmid = {1806598},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {dynamic behavior, dynamic metrics, execution tracing, javascript, program analysis},
} 

@INPROCEEDINGS{6320536, 
	author={Gama, W. and Alalfi, M.H. and Cordy, J.R. and Dean, T.R.}, 
	booktitle={Web Systems Evolution (WSE), 2012 14th IEEE International Symposium on}, 
	title={Normalizing object-oriented class styles in JavaScript}, 
	year={2012}, 
	month={Sept}, 
	pages={79-83}, 
	keywords={Java;object-oriented programming;reverse engineering;software maintenance;JavaScript;Web developer;functional programming style;imperative programming style;multiparadigm programming language;object-oriented class style;object-oriented programming style;program comprehension;program maintenance;Encapsulation;Java;Maintenance engineering;Pattern recognition;Prototypes;Syntactics;Transforms}, 
	doi={10.1109/WSE.2012.6320536}, 
	ISSN={2160-6153},}


@INPROCEEDINGS{Fontana2012MTD, 
	author={Fontana, F.A. and Ferme, V. and Spinelli, S.}, 
	booktitle={Managing Technical Debt (MTD), 2012 Third International Workshop on}, 
	title={Investigating the impact of code smells debt on quality code evaluation}, 
	year={2012}, 
	month={June}, 
	pages={15-22}, 
	keywords={public domain software;software maintenance;software metrics;software quality;application domain;code smell refactoring;code smells debt;design debt;open source system;quality code evaluation;software quality metrics;technical debt;Application software;Complexity theory;Generators;Measurement;Programming;Software quality;code smell refactoring;design debt;software quality metrics}, 
	doi={10.1109/MTD.2012.6225993},}

@INPROCEEDINGS{Tamburri2013CHASE, 
	author={Tamburri, D.A. and Kruchten, P. and Lago, P. and Van Vliet, H.}, 
	booktitle={Cooperative and Human Aspects of Software Engineering (CHASE), 2013 6th International Workshop on}, 
	title={What is social debt in software engineering?}, 
	year={2013}, 
	month={May}, 
	pages={93-96}, 
	keywords={social aspects of automation;software engineering;global distance;organisational barriers;social aspects;social debt detection;social debt management;socio-technical decisions;software development;software engineering quality;suboptimal development communities;suboptimal development community;technical aspects;Collaboration;Communities;Companies;Open source software;Software engineering;Visualization;Global Software Engineering;Human Factors in Software Engineering;Social Communities;Social Debt;Social Networks;Social Structure;Software Architecture;Software Engineering;Technical Debt}, 
	doi={10.1109/CHASE.2013.6614739},}

@INPROCEEDINGS{Palomba2013ASE, 
	author={Palomba, F. and Bavota, G. and Di Penta, M. and Oliveto, R. and De Lucia, A. and Poshyvanyk, D.}, 
	booktitle={Automated Software Engineering (ASE), 2013 IEEE/ACM 28th International Conference on}, 
	title={Detecting bad smells in source code using change history information}, 
	year={2013}, 
	month={Nov}, 
	pages={268-278}, 
	keywords={fault tolerant computing;software maintenance;software management;source code (software);HIST;Historical Information for Smell deTection;Java;bad smells detection;blob;change history information;code elements;code smells;divergent change;fault proneness;feature envy;parallel inheritance;shotgun surgery;smell detectors;software projects;source code analysis;structural information;versioning systems;Association rules;Detectors;Feature extraction;History;Measurement;Surgery;Change History Information;Code Smells}, 
	doi={10.1109/ASE.2013.6693086},}

@INPROCEEDINGS{Yamashita2013ICSE, 
	author={Yamashita, A. and Moonen, L.}, 
	booktitle={Software Engineering (ICSE), 2013 35th International Conference on}, 
	title={Exploring the impact of inter-smell relations on software maintainability: An empirical study}, 
	year={2013}, 
	month={May}, 
	pages={682-691}, 
	keywords={Java;principal component analysis;software maintenance;software quality;PCA;code smells;dependency analysis;intersmell relations impact;medium-sized Java systems;principal component analysis;software maintainability;source code quality;Context;Interviews;Java;Laboratories;Maintenance engineering;Principal component analysis;Software;bad smells;code smells;inter-smell relations;smell interaction;software maintenance;software quality}, 
	doi={10.1109/ICSE.2013.6606614},}

@INPROCEEDINGS{Fard2013SCAM, 
	author={Fard, A.M. and Mesbah, A.}, 
	booktitle={Source Code Analysis and Manipulation (SCAM), 2013 IEEE 13th International Working Conference on}, 
	title={JSNOSE: Detecting JavaScript Code Smells}, 
	year={2013}, 
	month={Sept}, 
	pages={116-125}, 
	keywords={Internet;Java;program debugging;CSS languages;HTML languages;JSNOSE technique;JavaScript code smells detection technique;interactive Web applications;prototype-based scripting language;refactoring;Cascading style sheets;Conferences;HTML;Measurement;Prototypes;Reactive power;Runtime;JavaScript;code smell;smell detection;web applications}, 
	doi={10.1109/SCAM.2013.6648192},}

@INPROCEEDINGS{Gama2012WSE, 
	author={Gama, W. and Alalfi, M.H. and Cordy, J.R. and Dean, T.R.}, 
	booktitle={Web Systems Evolution (WSE), 2012 14th IEEE International Symposium on}, 
	title={Normalizing object-oriented class styles in JavaScript}, 
	year={2012}, 
	month={Sept}, 
	pages={79-83}, 
	keywords={Java;object-oriented programming;reverse engineering;software maintenance;JavaScript;Web developer;functional programming style;imperative programming style;multiparadigm programming language;object-oriented class style;object-oriented programming style;program comprehension;program maintenance;Encapsulation;Java;Maintenance engineering;Pattern recognition;Prototypes;Syntactics;Transforms}, 
	doi={10.1109/WSE.2012.6320536}, 
	ISSN={2160-6153},}

@inproceedings{zazworka2011MTD,
	title={Investigating the impact of design debt on software quality},
	author={Zazworka, Nico and Shaw, Michele A and Shull, Forrest and Seaman, Carolyn},
	booktitle={Proceedings of the 2nd Workshop on Managing Technical Debt},
	pages={17--23},
	year={2011},
	organization={ACM}
}

@INPROCEEDINGS{Weber2014MTD, 
	author={Weber, J.H. and Cleve, A. and Meurice, L. and Bermudez Ruiz, F.J.}, 
	booktitle={Managing Technical Debt (MTD), 2014 Sixth International Workshop on}, 
	title={Managing Technical Debt in Database Schemas of Critical Software}, 
	year={2014}, 
	month={Sept}, 
	pages={43-46}, 
	keywords={database management systems;safety-critical software;software maintenance;software quality;TD;critical software;database schemas;quality attributes;security critical nature;software evolution;software maintenance;technical debt management;Communities;Computer architecture;Data models;Databases;Maintenance engineering;Monitoring;Software;database applications;integrity constraints;technical debt}, 
	doi={10.1109/MTD.2014.17},}

@inproceedings{zazworka2013MTD,
	title={A case study on effectively identifying technical debt},
	author={Zazworka, Nico and Sp{\'\i}nola, Rodrigo O and Vetro, Antonio and Shull, Forrest and Seaman, Carolyn},
	booktitle={Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering},
	pages={42--47},
	year={2013},
	organization={ACM}
}

@article{kruchten2013MTD,
	title={Technical debt: towards a crisper definition report on the 4th international workshop on managing technical debt},
	author={Kruchten, Philippe and Nord, Robert L and Ozkaya, Ipek and Falessi, Davide},
	journal={ACM SIGSOFT Software Engineering Notes},
	volume={38},
	number={5},
	pages={51--54},
	year={2013},
	publisher={ACM}
}

@incollection{Seaman2011MMTD,
	title = "Chapter 2 - Measuring and Monitoring Technical Debt ",
	editor = "Marvin V. Zelkowitz",
	booktitle = "",
	publisher = "Elsevier",
	year = "2011",
	volume = "82",
	pages = "25 - 46",
	series = "Advances in Computers ",
	issn = "0065-2458",
	doi = "http://dx.doi.org/10.1016/B978-0-12-385512-1.00002-5",
	url = "http://www.sciencedirect.com/science/article/pii/B9780123855121000025",
	author = "Carolyn Seaman and Yuepu Guo"
}

